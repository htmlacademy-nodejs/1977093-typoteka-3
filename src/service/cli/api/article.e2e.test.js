'use strict';

const express = require(`express`);
const request = require(`supertest`);

const article = require(`./article`);
const ArticleServiceService = require(`../data-service/article-service`);
const CommentsServiceService = require(`../data-service/comment-service`);
const {HttpCode} = require(`../../constants`);

describe(`API returns a list of articles`, () => {
  const app = createApi();

  let response;

  beforeAll(async () => {
    response = await request(app).get(`/articles`);
  });

  test(`Returns code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`Returns a list of 5 articles`, () => expect(response.body.length).toBe(5));
  test(`First article's id is equal to "Ywlq99"`, () => expect(response.body[0].id).toBe(`Ywlq99`));
});

describe(`API returns an article`, () => {
  const app = createApi();

  let response;

  beforeAll(async () => {
    response = await request(app).get(`/articles/K4hGZN`);
  });

  test(`Returns code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`Returns an article with title "Как достигнуть успеха не вставая с кресла"`, () => (
    expect(response.body.title).toBe(`Как достигнуть успеха не вставая с кресла`)
  ));
});

describe(`API creates a new article if data is valid`, () => {
  const app = createApi();
  const newArticle = {
    title: `Как достигнуть успеха не вставая с кресла`,
    announce: `Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем.`,
    fullText: `Соколу лес не диво, волку зима за обычай Это один из лучших рок-музыкантов.`,
    category: [
      `Товары для геймеров`,
      `Канцтовары и книги`
    ]
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .post(`/articles`)
      .send(newArticle);
  });

  test(`Returns code 201`, () => expect(response.statusCode).toBe(HttpCode.CREATED));
  test(`Returns created offer`, () => expect(response.body).toEqual(expect.objectContaining(newArticle)));
  test(`Articles total amount increased by one`, () => request(app)
    .get(`/articles`)
    .expect((res) => expect(res.body.length).toBe(6)));
});

describe(`API refuses create a new article if data is invalid`, () => {
  const app = createApi();
  const newArticle = {
    title: `Как достигнуть успеха`,
    announce: `Процессор заслуживает особого внимания.`,
    fullText: `Это один из лучших рок-музыкантов.`
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .post(`/articles`)
      .send(newArticle);
  });

  test(`Returns code 400 if required field is missed`, () => expect(response.statusCode).toBe(HttpCode.BAD_REQUEST));
});

describe(`API updates an article if data is valid`, () => {
  const app = createApi();
  const articleId = `Ywlq99`;
  const newArticle = {
    title: `Как достигнуть успеха`,
    announce: `Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много.`,
    fullText: `Соколу лес не диво, волку зима за обычай Это один из лучших рок-музыкантов.`,
    category: [`Товары для геймеров`]
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .put(`/articles/${articleId}`)
      .send(newArticle);
  });

  test(`Returns code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`Returns an updated article`, () => (
    expect(response.body).toEqual(expect.objectContaining(newArticle)))
  );
  test(`Article is really changed`, () => request(app)
    .get(`/articles/${articleId}`)
    .expect((res) => expect(res.body.title).toBe(`Как достигнуть успеха`)));
});

describe(`API refuses update an article if data is invalid`, () => {
  const app = createApi();
  const articleId = `Ywlq99`;
  const newArticle = {
    announce: `Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много.`,
    fullText: `Соколу лес не диво, волку зима за обычай`,
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .put(`/articles/${articleId}`)
      .send(newArticle);
  });

  test(`Returns code 400 if required field is missed`, () => expect(response.statusCode).toBe(HttpCode.BAD_REQUEST));
  test(`Returns code 404 if article with requested id doesn't exist`, () => request(app)
    .put(`/articles/NOT-EXIST`)
    .send(newArticle).expect(HttpCode.NOT_FOUND));
});

describe(`API delete an article`, () => {
  const app = createApi();
  const articleId = `Ywlq99`;

  let response;

  beforeAll(async () => {
    response = await request(app).delete(`/articles/${articleId}`);
  });

  test(`Returns code 204`, () => expect(response.statusCode).toBe(HttpCode.NO_CONTENT));
  test(`Article is really deleted`, () => request(app)
    .get(`/articles/${articleId}`)
    .expect(HttpCode.NOT_FOUND)
  );
  test(`Articles total amount is decreased by one`, () => request(app)
    .get(`/articles`)
    .expect((res) => expect(res.body.length).toBe(4))
  );
  test(`Returns code 404 if article with requested id doesn't exist`, () => request(app)
    .delete(`/articles/NOT-EXIST`)
    .expect(HttpCode.NOT_FOUND));
});

describe(`API returns a list of comments for the article`, () => {
  const app = createApi();

  let response;

  beforeAll(async () => {
    response = await request(app).get(`/articles/K4hGZN/comments`);
  });

  test(`Returns code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`Returns a list of 2 comments`, () => expect(response.body.length).toBe(3));
  test(`First comment's id is equal to "45Tr0k"`, () => expect(response.body[0].id).toBe(`45Tr0k`));
});

describe(`API creates a new comment to the article if data is valid`, () => {
  const app = createApi();
  const newComment = {
    text: `Как достигнуть успеха не вставая с кресла`,
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .post(`/articles/K4hGZN/comments`)
      .send(newComment);
  });

  test(`Returns code 201`, () => expect(response.statusCode).toBe(HttpCode.CREATED));
  test(`Returns created comment`, () => expect(response.body).toEqual(expect.objectContaining(newComment)));
  test(`Comments total amount for the article increased by one`, () => request(app)
    .get(`/articles/K4hGZN/comments`)
    .expect((res) => expect(res.body.length).toBe(4)));
});

describe(`API refuses create a new comment to the article if data is invalid`, () => {
  const app = createApi();
  const newComment = {
    message: `Как достигнуть успеха не вставая с кресла`,
  };

  let response;

  beforeAll(async () => {
    response = await request(app)
      .post(`/articles/K4hGZN/comments`)
      .send(newComment);
  });

  test(`Returns code 400 if required field is missed`, () => expect(response.statusCode).toBe(HttpCode.BAD_REQUEST));
  test(`Returns code 404 if article with requested id doesn't exist`, () => request(app)
    .get(`/articles/NOT-EXIST/comments`)
    .expect(HttpCode.NOT_FOUND)
  );
});

describe(`API delete comment`, () => {
  const app = createApi();
  const articleId = `Ywlq99`;
  const commentId = `bPLmVE`;

  let response;

  beforeAll(async () => {
    response = await request(app).delete(`/articles/${articleId}/comments/${commentId}`);
  });

  test(`Returns code 204`, () => expect(response.statusCode).toBe(HttpCode.NO_CONTENT));
  test(`Comments total amount is decreased by one`, () => request(app)
    .get(`/articles/${articleId}/comments`)
    .expect((res) => expect(res.body.length).toBe(2))
  );
  test(`Returns code 404 if article with requested id doesn't exist`, () => request(app)
    .delete(`/articles/NOT-FOUND/comments/${commentId}`)
    .expect(HttpCode.NOT_FOUND)
  );
  test(`Returns code 404 if comment with requested id doesn't exist`, () => request(app)
    .delete(`/articles/${articleId}/comments/NOT-FOUND`)
    .expect(HttpCode.NOT_FOUND)
  );
});

function createApi() {
  const app = express();
  const mockedData = [
    {
      id: `Ywlq99`,
      title: `Обзор новейшего смартфона`,
      announce: `Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много.`,
      fullText: `Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Простые ежедневные упражнения помогут достичь успеха. Не беречь поросли, не видать и дерева Летом с удочкой, зимой с сумочкой Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Программировать не настолько сложно, как об этом говорят. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Около речки колодца не копают. Ласточка весну начинает, соловей кончает Летом не припасешь, зимой не принесешь Собрать камни бесконечности легко, если вы прирожденный герой. Это один из лучших рок-музыкантов. Летом - пыль, зимою снег одолевает Не делай неприятностей кому-либо, иначе в будущем сам можешь лишиться поддержки Он написал больше 30 хитов. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Застает зимушка в летнем платьице Придет осень, за все спросит Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Одна ласточка не делает весны Узок путь зимою, а жидок - весною Как начать действовать? Для начала просто соберитесь. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Соколу лес не диво, волку зима за обычай Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Ёлки — это не просто красивое дерево. Это прочная древесина. Достичь успеха помогут ежедневные повторения. Кто весной не пролежит, весь год будет сыт Не плюй в колодец, пригодится воды напиться Не пугай, зима,- весна придет Первая большая ёлка была установлена только в 1938 году.`,
      createdDate: `2021-12-11 10:34:36`,
      category: [`Алкогольные напитки и продукты`, `Товары для геймеров`, `Одежда, обувь и украшения`, `Деревья`, `Товары для бизнеса и услуги`, `Кино`, `Сантехника и ремонт`, `Спорт и увлечения`],
      comments: [{
        id: `bPLmVE`,
        text: `Продаю в связи с переездом. Отрываю от сердца. Почему в таком ужасном состоянии? А сколько игр в комплекте? А где блок питания?`
      }, {
        id: `NnrgB5`,
        text: `Неплохо, но дорого. А где блок питания? Почему в таком ужасном состоянии? Вы что?! В магазине дешевле. Совсем немного... А сколько игр в комплекте? Продаю в связи с переездом. Отрываю от сердца.`
      }, {
        id: `2WZFgN`,
        text: `Вы что?! В магазине дешевле. Неплохо, но дорого. Совсем немного... С чем связана продажа? Почему так дешёво? А сколько игр в комплекте?`
      }]
    },
    {
      id: `K4hGZN`,
      title: `Как достигнуть успеха не вставая с кресла`,
      announce: `Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем.`,
      fullText: `Золотое сечение — соотношение двух величин, гармоническая пропорция. Ёлки — это не просто красивое дерево. Это прочная древесина. Соколу лес не диво, волку зима за обычай Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Придет осень, за все спросит Первая большая ёлка была установлена только в 1938 году. Как начать действовать? Для начала просто соберитесь. Собрать камни бесконечности легко, если вы прирожденный герой. Без труда не выловишь и рыбку из пруда Кто весной не пролежит, весь год будет сыт Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Одна ласточка не делает весны`,
      createdDate: `2022-01-02 10:34:36`,
      category: [`Товары для бизнеса и услуги`, `Программирование`, `Красота и здоровье`],
      comments: [
        {
          id: `45Tr0k`,
          text: `Неплохо, но дорого. Почему в таком ужасном состоянии?`
        }, {
          id: `c6qP-W`,
          text: `С чем связана продажа? Почему так дешёво? Совсем немного... Неплохо, но дорого. А где блок питания? Оплата наличными или перевод на карту? Продаю в связи с переездом. Отрываю от сердца. Вы что?! В магазине дешевле.`
        }, {
          id: `c6nMFn`,
          text: `Неплохо, но дорого. А сколько игр в комплекте? Почему в таком ужасном состоянии? Совсем немного...`
        }
      ]
    },
    {
      id: `ufY2Ia`,
      title: `Что такое золотое сечение`,
      announce: `Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Кто не сажал дерева, тому не лежать в тени Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.`,
      fullText: `Одна ласточка не делает весны Как начать действовать? Для начала просто соберитесь. Программировать не настолько сложно, как об этом говорят. Узок путь зимою, а жидок - весною Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Ласточка весну начинает, соловей кончает Кто не сажал дерева, тому не лежать в тени Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Дважды в год лето не бывает Соколу лес не диво, волку зима за обычай Он написал больше 30 хитов. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Придет осень, за все спросит Не плюй в колодец, пригодится воды напиться Не зима знобит, а весна Около речки колодца не копают. Кто весной не пролежит, весь год будет сыт Не делай неприятностей кому-либо, иначе в будущем сам можешь лишиться поддержки Собрать камни бесконечности легко, если вы прирожденный герой. Первая большая ёлка была установлена только в 1938 году. Летом не припасешь, зимой не принесешь`,
      createdDate: `2022-01-01 10:34:36`,
      category: [`Сантехника и ремонт`, `Товары для дома`, `Товары для бизнеса и услуги`, `Железо`, `Бытовая техника`, `Кино`, `Деревья`, `Разное`, `Алкогольные напитки и продукты`, `Красота и здоровье`, `Без рамки`, `Смартфоны, ТВ и электроника`, `Одежда, обувь и украшения`, `Детские товары`],
      comments: [{
        id: `koWNj_`,
        text: `Вы что?! В магазине дешевле. Совсем немного... С чем связана продажа? Почему так дешёво? А где блок питания? Оплата наличными или перевод на карту?`
      }, {
        id: `_qsFKV`,
        text: `А сколько игр в комплекте? С чем связана продажа? Почему так дешёво? Продаю в связи с переездом. Отрываю от сердца.`
      }]
    },
    {
      id: `jB9KQS`,
      title: `Ёлки. История деревьев`,
      announce: `Он написал больше 30 хитов. Одна ласточка не делает весны Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Первая большая ёлка была установлена только в 1938 году. Летом с удочкой, зимой с сумочкой`,
      fullText: `Соколу лес не диво, волку зима за обычай Первая большая ёлка была установлена только в 1938 году. Из под его пера вышло 8 платиновых альбомов. Кто весной не пролежит, весь год будет сыт Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Не плюй в колодец, пригодится воды напиться Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Узок путь зимою, а жидок - весною Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Летом - пыль, зимою снег одолевает Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Летом с удочкой, зимой с сумочкой Это один из лучших рок-музыкантов. Простые ежедневные упражнения помогут достичь успеха. Дважды в год лето не бывает Летом не припасешь, зимой не принесешь Не зима знобит, а весна Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Около речки колодца не копают. Не беречь поросли, не видать и дерева Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Придет осень, за все спросит Не делай неприятностей кому-либо, иначе в будущем сам можешь лишиться поддержки Достичь успеха помогут ежедневные повторения. Без труда не выловишь и рыбку из пруда Как начать действовать? Для начала просто соберитесь. Не пугай, зима,- весна придет Под лежачий камень и вода не течет Программировать не настолько сложно, как об этом говорят. Он написал больше 30 хитов. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Ёлки — это не просто красивое дерево. Это прочная древесина. Кто не сажал дерева, тому не лежать в тени`,
      createdDate: `2022-01-02 10:34:36`,
      category: [`Зоотовары`, `Красота и здоровье`, `Канцтовары и книги`, `Товары для дома`, `Алкогольные напитки и продукты`, `Детские товары`, `IT`, `Ноутбуки и компьютеры`, `За жизнь`, `Бытовая техника`],
      comments: [{
        id: `8_mUGO`,
        text: `А где блок питания? Почему в таком ужасном состоянии? Вы что?! В магазине дешевле. Продаю в связи с переездом. Отрываю от сердца. Неплохо, но дорого. Совсем немного... С чем связана продажа? Почему так дешёво?`
      }, {
        id: `Bkuiz4`,
        text: `А сколько игр в комплекте? Вы что?! В магазине дешевле. Продаю в связи с переездом. Отрываю от сердца. Совсем немного... Оплата наличными или перевод на карту?`
      }]
    },
    {
      id: `-WfOpw`,
      title: `С берега море красиво, а с моря - берег красив`,
      announce: `Не беречь поросли, не видать и дерева Летом не припасешь, зимой не принесешь Одна ласточка не делает весны Он написал больше 30 хитов.`,
      fullText: `Достичь успеха помогут ежедневные повторения. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Простые ежедневные упражнения помогут достичь успеха. Летом не припасешь, зимой не принесешь Соколу лес не диво, волку зима за обычай Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Первая большая ёлка была установлена только в 1938 году. Как начать действовать? Для начала просто соберитесь. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Был бы лес, соловьи прилетят Программировать не настолько сложно, как об этом говорят. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Придет осень, за все спросит Не делай неприятностей кому-либо, иначе в будущем сам можешь лишиться поддержки Не зима знобит, а весна Под лежачий камень и вода не течет Застает зимушка в летнем платьице Летом - пыль, зимою снег одолевает Золотое сечение — соотношение двух величин, гармоническая пропорция. Из под его пера вышло 8 платиновых альбомов. Дважды в год лето не бывает Одна ласточка не делает весны Не беречь поросли, не видать и дерева Он написал больше 30 хитов. Кто весной не пролежит, весь год будет сыт Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Не плюй в колодец, пригодится воды напиться Собрать камни бесконечности легко, если вы прирожденный герой. Кто не сажал дерева, тому не лежать в тени Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Ёлки — это не просто красивое дерево. Это прочная древесина. Летом с удочкой, зимой с сумочкой Не пугай, зима,- весна придет Без труда не выловишь и рыбку из пруда Узок путь зимою, а жидок - весною Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Ласточка весну начинает, соловей кончает Что летом родится, то зимой пригодится`,
      createdDate: `2021-12-04 10:34:36`,
      category: [`Товары для дома`, `Смартфоны, ТВ и электроника`, `IT`, `Ноутбуки и компьютеры`, `Детские товары`, `Разное`, `Дача, сад и огород`, `Одежда, обувь и украшения`, `Деревья`, `Зоотовары`, `Канцтовары и книги`, `За жизнь`, `Товары для геймеров`, `Без рамки`, `Алкогольные напитки и продукты`, `Кино`, `Бытовая техника`, `Инструменты и авто товары`, `Сантехника и ремонт`, `Спорт и увлечения`, `Железо`],
      comments: [{id: `O0PaaL`, text: `С чем связана продажа? Почему так дешёво?`}, {
        id: `4jqXkf`,
        text: `Вы что?! В магазине дешевле. С чем связана продажа? Почему так дешёво? Совсем немного... А сколько игр в комплекте? Почему в таком ужасном состоянии? Оплата наличными или перевод на карту? А где блок питания?`
      }, {
        id: `l6ZJjh`,
        text: `С чем связана продажа? Почему так дешёво? Неплохо, но дорого. Продаю в связи с переездом. Отрываю от сердца. А где блок питания? Оплата наличными или перевод на карту? Вы что?! В магазине дешевле. Почему в таком ужасном состоянии? А сколько игр в комплекте?`
      }, {
        id: `GFAmum`,
        text: `Почему в таком ужасном состоянии? С чем связана продажа? Почему так дешёво? Оплата наличными или перевод на карту? А сколько игр в комплекте? Вы что?! В магазине дешевле. Совсем немного...`
      }, {
        id: `zwLtfY`,
        text: `Оплата наличными или перевод на карту? А где блок питания? Вы что?! В магазине дешевле. Почему в таком ужасном состоянии? Продаю в связи с переездом. Отрываю от сердца. А сколько игр в комплекте? Совсем немного... Неплохо, но дорого.`
      }]
    }
  ];
  const mocks = JSON.parse(JSON.stringify(mockedData));

  app.use(express.json());
  article(app, new ArticleServiceService(mocks), new CommentsServiceService(mocks));

  return app;
}
